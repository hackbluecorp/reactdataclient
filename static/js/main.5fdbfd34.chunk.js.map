{"version":3,"sources":["App.js","Firebase.js","components/Create.js","index.js"],"names":["App","props","onCollectionUpdate","querySnapshot","clients","forEach","doc","data","idClient","numberPlate","email","name","dateFormatString","dateFormatDate","push","key","id","setState","ref","firebase","collection","orderBy","unsubscribe","state","date","Date","this","onSnapshot","timerID","setInterval","tick","clearInterval","dataComent","bgcolor","class","to","toLocaleString","weekday","year","month","day","hour","minute","second","hour12","map","Coment","toDate","getFullYear","activeDate","noActiveDate","getMonth","getDate","getHours","getMinutes","getSeconds","Component","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","registerLocale","es","Create","maxNumber","Math","max","apply","o","onChangeOnlyLetters","e","target","value","replace","onChange","onChangeUpperCase","toUpperCase","onChangeLowerCase","toLowerCase","onSubmit","preventDefault","add","then","docRef","window","location","reload","catch","error","console","alert","firestore","startDate","handleChange","bind","for","type","placeholder","minlength","maxlength","data-toggle","title","required","ReactDOM","render","basename","process","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.5fdbfd34.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\n//import firebase from './Firebase';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('clients').orderBy('idClient', 'desc');\n    this.unsubscribe = null;\n    this.state = {\n      clients: [],\n      date: new Date()\n    };\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const clients = [];\n    querySnapshot.forEach((doc) => {\n      const { idClient, numberPlate, email, name, dateFormatString, dateFormatDate } = doc.data();\n      clients.push({\n        key: doc.id,\n        doc, // DocumentSnapshot\n        idClient,\n        numberPlate,        \n        name,\n        email,\n        dateFormatString,\n        dateFormatDate\n      });\n    });\n    this.setState({\n      clients\n   });   \n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n \n  activeDate(dataComent){\n    return (                    \n      <tbody>\n      <tr bgcolor=\"#fff\">\n        <td>{dataComent.numberPlate}</td>\n        <td>{dataComent.name}</td>\n        <td>{dataComent.email}</td>\n      </tr>                    \n      </tbody>\n    )\n  };\n\n  noActiveDate(dataComent){\n    return (                    \n      <tbody>\n      <tr bgcolor=\"#fff\">\n      <td>{dataComent.numberPlate}</td>\n        <td>{dataComent.name}</td>\n        <td>{dataComent.email}</td>\n      </tr>                    \n      </tbody>\n    )\n  };\n\n  render() {\n    const options = {\n      weekday: \"long\", \n      year: \"numeric\", \n      month: \"long\", \n      day: \"numeric\", \n      hour: \"numeric\", \n      minute: \"numeric\",\n      second: \"numeric\",\n      hour12:\"false\"};\n\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">          \n            <h3 class=\"panel-title\">\n              DATOS DE LOS CLIENTES\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <div class=\"row\">\n              <h4><Link to={\"/create\"} class=\"btn btn-primary\">Agregar Un Cliente</Link></h4>\n            </div>\n          <div>\n            <strong>Fecha y hora actual </strong>\n          </div>\n          <div>\n            <label>{this.state.date.toLocaleString(\"es-Co\", options)}</label>         \n          </div>         \n            <table class=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>Placa del Vehiculo</th>\n                  <th>Nombre del Cliente</th>\n                  <th>Correo Electronico</th>\n                </tr>\n              </thead>\n               { this.state.clients.map(Coment =>                 \n                  {if (Coment.dateFormatDate.toDate().getFullYear(\"en-EN\") > this.state.date.getFullYear(\"en-EN\")) {\n                    let dateIsActive = this.activeDate(Coment);\n                    return(\n                      dateIsActive\n                    )\n                  } \n                    if (Coment.dateFormatDate.toDate().getFullYear(\"en-EN\") < this.state.date.getFullYear(\"en-EN\")) {                      \n                      let dateIsNotActive = this.noActiveDate(Coment);\n                      return(\n                      dateIsNotActive\n                      )                   \n                    }\n                      if (Coment.dateFormatDate.toDate().getFullYear(\"en-EN\") == this.state.date.getFullYear(\"en-EN\")) {\n                        if (Coment.dateFormatDate.toDate().getMonth(\"en-EN\") > this.state.date.getMonth(\"en-EN\")) {                      \n                          let dateIsActive = this.activeDate(Coment);\n                          return(\n                            dateIsActive\n                          )\n                      }\n                        if (Coment.dateFormatDate.toDate().getMonth(\"en-EN\") < this.state.date.getMonth(\"en-EN\")) {                      \n                            let dateIsNotActive = this.noActiveDate(Coment);\n                            return(\n                              dateIsNotActive\n                            )\n                        }\n                          if (Coment.dateFormatDate.toDate().getMonth(\"en-EN\") == this.state.date.getMonth(\"en-EN\")) {                      \n                            if (Coment.dateFormatDate.toDate().getDate(\"en-EN\") > this.state.date.getDate(\"en-EN\")) {                      \n                                let dateIsActive = this.activeDate(Coment);\n                                return(\n                                  dateIsActive\n                                )\n                            }\n                              if (Coment.dateFormatDate.toDate().getDate(\"en-EN\") < this.state.date.getDate(\"en-EN\")) {                      \n                                let dateIsNotActive = this.noActiveDate(Coment);\n                                return(\n                                  dateIsNotActive\n                                )\n                              }\n                                if (Coment.dateFormatDate.toDate().getDate(\"en-EN\") == this.state.date.getDate(\"en-EN\")) {                      \n                                  if (Coment.dateFormatDate.toDate().getHours(\"en-EN\") > this.state.date.getHours(\"en-EN\")) {                      \n                                    let dateIsActive = this.activeDate(Coment);\n                                    return(\n                                      dateIsActive\n                                    )\n                                  }\n                                    if (Coment.dateFormatDate.toDate().getHours(\"en-EN\") < this.state.date.getHours(\"en-EN\")) {                      \n                                      let dateIsNotActive = this.noActiveDate(Coment);\n                                      return(\n                                        dateIsNotActive\n                                      )\n                                    }\n                                      if (Coment.dateFormatDate.toDate().getHours(\"en-EN\") == this.state.date.getHours(\"en-EN\")) {                      \n                                        if (Coment.dateFormatDate.toDate().getMinutes(\"en-EN\") > this.state.date.getMinutes(\"en-EN\")) {                      \n                                          let dateIsActive = this.activeDate(Coment);\n                                          return(\n                                            dateIsActive\n                                          )\n                                        }\n                                          if (Coment.dateFormatDate.toDate().getMinutes(\"en-EN\") < this.state.date.getMinutes(\"en-EN\")) {                      \n                                            let dateIsNotActive = this.noActiveDate(Coment);\n                                            return(\n                                              dateIsNotActive\n                                            )\n                                          }\n                                            if (Coment.dateFormatDate.toDate().getMinutes(\"en-EN\") == this.state.date.getMinutes(\"en-EN\")) {                      \n                                              if (Coment.dateFormatDate.toDate().getSeconds(\"en-EN\") >= this.state.date.getSeconds(\"en-EN\")) {                      \n                                                let dateIsActive = this.activeDate(Coment);\n                                                return(\n                                                  dateIsActive\n                                                )\n                                              } else {                      \n                                                let dateIsNotActive = this.noActiveDate(Coment);\n                                                return(\n                                                  dateIsNotActive\n                                                )\n                                              }                              \n                                            }\n                                        }\n                                  }\n                            }\n                      }                                          \n                   }                                  \n                )}              \n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","//import * as firebase from 'firebase';\r\n//import firestore from 'firebase/firestore'\r\nimport * as firebase from 'firebase/app';\r\n\r\nconst settings = {};\r\nconst config ={\r\n    apiKey: \"AIzaSyDz0DxYNAc_Z6Uw7fzN2l1WGQiLg_xb_2Y\",\r\n    authDomain: \"reactdataclient.firebaseapp.com\",\r\n    databaseURL: \"https://reactdataclient.firebaseio.com\",\r\n    projectId: \"reactdataclient\",\r\n    storageBucket: \"reactdataclient.appspot.com\",\r\n    messagingSenderId: \"322112369161\",\r\n    appId: \"1:322112369161:web:ba33dc6a36564115a1fed8\",\r\n    measurementId: \"G-R96QWX2L4J\"\r\n};\r\n\r\n/*\r\nconst config = {\r\n    apiKey: \"AIzaSyBvEExkkpTBf3VYfL7PVScolkMQtP_3q5E\",\r\n    authDomain: \"reactagenda-93ffc.firebaseapp.com\",\r\n    databaseURL: \"https://reactagenda-93ffc.firebaseio.com\",\r\n    projectId: \"reactagenda-93ffc\",\r\n    storageBucket: \"reactagenda-93ffc.appspot.com\",\r\n    messagingSenderId: \"753510908364\",\r\n    appId: \"1:753510908364:web:5396f044547c92efdf9d69\"\r\n};*/\r\n\r\n\r\n\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore().settings(settings);\r\n\r\nexport default firebase;\r\n\r\n/*import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBvEExkkpTBf3VYfL7PVScolkMQtP_3q5E\",\r\n    authDomain: \"reactagenda-93ffc.firebaseapp.com\",\r\n    databaseURL: \"https://reactagenda-93ffc.firebaseio.com\",\r\n    projectId: \"reactagenda-93ffc\",\r\n    storageBucket: \"reactagenda-93ffc.appspot.com\",\r\n    messagingSenderId: \"753510908364\",\r\n    appId: \"1:753510908364:web:5396f044547c92efdf9d69\",\r\n});\r\n\r\n\r\nconst auth = firebaseApp.auth();\r\nconst db = firebaseApp.firestore();\r\n\r\nexport { db, auth };*/","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\nimport DatePicker, {registerLocale} from 'react-datepicker';\r\nimport firebase from '../Firebase';\r\n//import * as firebase from 'firebase/app';\r\n//import 'firebase/auth';\r\n//import 'firebase/firestore';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport es from 'date-fns/locale/es';\r\nregisterLocale(\"es\", es);\r\n\r\nclass Create extends Component {\r\n\r\n  constructor (props) {\r\n    const options = {\r\n      weekday: \"long\", \r\n      year: \"numeric\", \r\n      month: \"long\", \r\n      day: \"numeric\", \r\n      hour: \"numeric\", \r\n      minute: \"numeric\", \r\n      hour12:\"false\"};\r\n      \r\n    super(props)\r\n    this.ref = firebase.firestore().collection('clients');\r\n    this.state = {\r\n    idClient: '',\r\n    numberPlate: '',\r\n    dateFormatString: new Date().toLocaleString(\"es-Co\", options),\r\n    name: '',\r\n    email: '',\r\n    dateFormatDate: new Date(),\r\n    startDate: ''    \r\n    };\r\n    this.handleChange = this.handleChange.bind(this);    \r\n    this.unsubscribe = null;    \r\n    }\r\n  \r\n    onCollectionUpdate = (querySnapshot) => {\r\n      const clients = [];\r\n      const maxNumber = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const { idClient, numberPlate, name, email } = doc.data();\r\n        clients.push({\r\n          key: doc.id,\r\n          doc, // DocumentSnapshot\r\n          idClient,\r\n          numberPlate,\r\n          name,\r\n          email\r\n        });\r\n        maxNumber.push({\r\n          idClient\r\n        });  \r\n      });\r\n      this.setState({\r\n        clients,\r\n        idClient: Math.max.apply(Math, maxNumber.map(function(o) { return o.idClient; }))+1\r\n     });\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate); \r\n    }\r\n  \r\n  handleChange(date) {\r\n    var options = {\r\n      weekday: \"long\", \r\n      year: \"numeric\", \r\n      month: \"long\", \r\n      day: \"numeric\", \r\n      hour: \"numeric\", \r\n      minute: \"numeric\", \r\n      hour12:\"false\"};\r\n    this.setState({        \r\n    startDate: date,    \r\n    dateFormatString: date.toLocaleString(\"es-Co\", options),\r\n    dateFormatDate: date\r\n    })\r\n  }\r\n\r\n  onChangeOnlyLetters = (e) => {      \r\n    const state = this.state\r\n    state[e.target.name] = e.target.value;\r\n    state[e.target.name] = state[e.target.name].replace(/[^A-Za-zÀ-ÿ]/ig, ' ')\r\n    this.setState(state);    \r\n  }\r\n  \r\n  onChange = (e) => {      \r\n    const state = this.state\r\n    state[e.target.name] = e.target.value;    \r\n    this.setState(state);\r\n  }\r\n\r\n  onChangeUpperCase = (e) => {\r\n    const state = this.state\r\n    state[e.target.name] = e.target.value.toUpperCase();\r\n    this.setState(state);    \r\n  }\r\n\r\n  onChangeLowerCase = (e) => {\r\n    const state = this.state\r\n    state[e.target.name] = e.target.value.toLowerCase(); \r\n    this.setState(state);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { idClient, numberPlate, name, email, dateFormatString, dateFormatDate } = this.state;\r\n    \r\n    this.ref.add({\r\n      idClient,\r\n      numberPlate,      \r\n      name,\r\n      email,\r\n      dateFormatString,\r\n      dateFormatDate\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        idClient: '',\r\n        numberPlate: '',        \r\n        name: '',\r\n        email: '',\r\n        dateFormatString: '',\r\n        dateFormatDate: ''\r\n      });\r\n      //this.props.history.push(\"/create\")\r\n      window.location.reload(true);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error adding document: \", error);\r\n    });\r\n    alert(\"Correo Registrado Exitosamente!!\")\r\n  }\r\n  \r\n  render() {\r\n    const { numberPlate, name, email } = this.state;\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">\r\n              AGREGAR NUEVO CORREO ELECTRONICO\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"select-service\">Placa del Vehiculo</label>\r\n                <input\r\n                  type=\"text\" \r\n                  class=\"form-control\"\r\n                  name=\"numberPlate\"\r\n                  value={numberPlate} \r\n                  onChange={this.onChangeUpperCase}\r\n                  placeholder=\"Placa del Vehiculo\"\r\n                  minlength=\"6\"\r\n                  maxlength=\"6\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"Ingresa la Placa de Tu Vehiculo\"\r\n                  required\r\n                  />              \r\n              </div>    \r\n              <div class=\"form-group\">\r\n                <label for=\"dateFormatString\">Nombre del Cliente</label>                \r\n                <input\r\n                  type=\"text\" \r\n                  class=\"form-control\"\r\n                  name=\"name\" \r\n                  value={name} \r\n                  onChange={this.onChangeOnlyLetters} \r\n                  placeholder=\"Nombre del Cliente\"\r\n                  minlength=\"7\"\r\n                  maxlength=\"50\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"Ingresa tu Nombre\"\r\n                  required\r\n                  />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"client\">Correo Electronico</label>\r\n                <input\r\n                  type=\"text\" \r\n                  class=\"form-control\"\r\n                  name=\"email\" \r\n                  value={email} \r\n                  onChange={this.onChangeLowerCase} \r\n                  placeholder=\"Correo Electronico\"\r\n                  minlength=\"13\"\r\n                  maxlength=\"50\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"Ingresa Tu Correo Electronico\"\r\n                  required\r\n                  />\r\n              </div>              \r\n              <button name=\"btnSubmit\" type=\"submit\" class=\"btn btn-success\">Aceptar</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Create;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport Create from './components/Create';\nimport Appcss from './App.css'\nimport {\n    BrowserRouter,\n    Switch,\n  } from \"react-router-dom\";\n  \n\n//import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(    \n    <Router basename={process.env.PUBLIC_URL}>        \n        <div>\n\n                <Route exact path='/' component={App} />\n                <Route path='/create' component={Create} />\n\n        </div>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//registerServiceWorker();\n"],"sourceRoot":""}